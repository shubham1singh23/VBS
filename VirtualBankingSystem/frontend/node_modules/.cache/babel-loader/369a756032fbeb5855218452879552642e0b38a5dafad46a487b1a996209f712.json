{"ast":null,"code":"// Fallback API service for when backend is not available\nexport const fallbackAPI = {\n  // Mock customer data\n  getBalance: async customerId => {\n    console.log('Using fallback API for balance');\n    return {\n      customerId: customerId,\n      username: 'demo_user',\n      balance: 0\n    };\n  },\n  getTransactions: async customerId => {\n    console.log('Using fallback API for transactions');\n    return [];\n  },\n  deposit: async (customerId, amount, description) => {\n    console.log('Using fallback API for deposit');\n    return {\n      id: Date.now(),\n      type: 'DEPOSIT',\n      amount: amount,\n      description: description,\n      timestamp: new Date().toISOString(),\n      balanceAfterTransaction: amount\n    };\n  },\n  withdraw: async (customerId, amount, description) => {\n    console.log('Using fallback API for withdrawal');\n    return {\n      id: Date.now(),\n      type: 'WITHDRAWAL',\n      amount: amount,\n      description: description,\n      timestamp: new Date().toISOString(),\n      balanceAfterTransaction: 0\n    };\n  }\n};","map":{"version":3,"names":["fallbackAPI","getBalance","customerId","console","log","username","balance","getTransactions","deposit","amount","description","id","Date","now","type","timestamp","toISOString","balanceAfterTransaction","withdraw"],"sources":["C:/Users/SHUBHAM/Desktop/VBS/VirtualBankingSystem/frontend/src/services/api-fallback.js"],"sourcesContent":["// Fallback API service for when backend is not available\r\nexport const fallbackAPI = {\r\n  // Mock customer data\r\n  getBalance: async (customerId) => {\r\n    console.log('Using fallback API for balance');\r\n    return {\r\n      customerId: customerId,\r\n      username: 'demo_user',\r\n      balance: 0\r\n    };\r\n  },\r\n\r\n  getTransactions: async (customerId) => {\r\n    console.log('Using fallback API for transactions');\r\n    return [];\r\n  },\r\n\r\n  deposit: async (customerId, amount, description) => {\r\n    console.log('Using fallback API for deposit');\r\n    return {\r\n      id: Date.now(),\r\n      type: 'DEPOSIT',\r\n      amount: amount,\r\n      description: description,\r\n      timestamp: new Date().toISOString(),\r\n      balanceAfterTransaction: amount\r\n    };\r\n  },\r\n\r\n  withdraw: async (customerId, amount, description) => {\r\n    console.log('Using fallback API for withdrawal');\r\n    return {\r\n      id: Date.now(),\r\n      type: 'WITHDRAWAL',\r\n      amount: amount,\r\n      description: description,\r\n      timestamp: new Date().toISOString(),\r\n      balanceAfterTransaction: 0\r\n    };\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG;EACzB;EACAC,UAAU,EAAE,MAAOC,UAAU,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO;MACLF,UAAU,EAAEA,UAAU;MACtBG,QAAQ,EAAE,WAAW;MACrBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,eAAe,EAAE,MAAOL,UAAU,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAO,EAAE;EACX,CAAC;EAEDI,OAAO,EAAE,MAAAA,CAAON,UAAU,EAAEO,MAAM,EAAEC,WAAW,KAAK;IAClDP,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO;MACLO,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,SAAS;MACfL,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAEA,WAAW;MACxBK,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;MACnCC,uBAAuB,EAAER;IAC3B,CAAC;EACH,CAAC;EAEDS,QAAQ,EAAE,MAAAA,CAAOhB,UAAU,EAAEO,MAAM,EAAEC,WAAW,KAAK;IACnDP,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAO;MACLO,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,YAAY;MAClBL,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAEA,WAAW;MACxBK,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;MACnCC,uBAAuB,EAAE;IAC3B,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}