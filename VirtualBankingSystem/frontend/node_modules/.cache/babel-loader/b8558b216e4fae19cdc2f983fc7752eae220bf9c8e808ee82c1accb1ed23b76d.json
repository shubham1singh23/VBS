{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Customer API endpoints\nexport const customerAPI = {\n  // Register a new customer\n  register: async customerData => {\n    try {\n      const response = await api.post('/customers/register', customerData);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Login customer\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/customers/login', {\n        username,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Get customer by ID\n  getCustomerById: async customerId => {\n    try {\n      const response = await api.get(`/customers/${customerId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Get customer balance\n  getBalance: async customerId => {\n    try {\n      console.log(`API: Getting balance for customer ${customerId}`);\n      const response = await api.get(`/customers/${customerId}/balance`);\n      console.log('API: Balance response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      console.error('API: Balance error:', error);\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  }\n};\n\n// Transaction API endpoints\nexport const transactionAPI = {\n  // Deposit money\n  deposit: async (customerId, amount, description) => {\n    try {\n      const response = await api.post('/transactions/deposit', {\n        customerId,\n        amount,\n        description\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  // Withdraw money\n  withdraw: async (customerId, amount, description) => {\n    try {\n      const response = await api.post('/transactions/withdraw', {\n        customerId,\n        amount,\n        description\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  },\n  // Get customer transactions\n  getTransactions: async customerId => {\n    try {\n      console.log(`API: Getting transactions for customer ${customerId}`);\n      const response = await api.get(`/transactions/customer/${customerId}`);\n      console.log('API: Transactions response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      console.error('API: Transactions error:', error);\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  },\n  // Get customer passbook\n  getPassbook: async customerId => {\n    try {\n      const response = await api.get(`/transactions/customer/${customerId}/passbook`);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  },\n  // Get specific transaction\n  getTransaction: async transactionId => {\n    try {\n      const response = await api.get(`/transactions/${transactionId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","customerAPI","register","customerData","response","post","data","error","_error$response","message","login","username","password","_error$response2","getCustomerById","customerId","get","_error$response3","getBalance","console","log","_error$response4","transactionAPI","deposit","amount","description","_error$response5","withdraw","_error$response6","getTransactions","_error$response7","getPassbook","_error$response8","getTransaction","transactionId","_error$response9"],"sources":["C:/Users/SHUBHAM/Desktop/VBS/VirtualBankingSystem/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Customer API endpoints\r\nexport const customerAPI = {\r\n  // Register a new customer\r\n  register: async (customerData) => {\r\n    try {\r\n      const response = await api.post('/customers/register', customerData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Login customer\r\n  login: async (username, password) => {\r\n    try {\r\n      const response = await api.post('/customers/login', {\r\n        username,\r\n        password\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get customer by ID\r\n  getCustomerById: async (customerId) => {\r\n    try {\r\n      const response = await api.get(`/customers/${customerId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get customer balance\r\n  getBalance: async (customerId) => {\r\n    try {\r\n      console.log(`API: Getting balance for customer ${customerId}`);\r\n      const response = await api.get(`/customers/${customerId}/balance`);\r\n      console.log('API: Balance response:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('API: Balance error:', error);\r\n      throw error.response?.data || error.message;\r\n    }\r\n  }\r\n};\r\n\r\n// Transaction API endpoints\r\nexport const transactionAPI = {\r\n  // Deposit money\r\n  deposit: async (customerId, amount, description) => {\r\n    try {\r\n      const response = await api.post('/transactions/deposit', {\r\n        customerId,\r\n        amount,\r\n        description\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Withdraw money\r\n  withdraw: async (customerId, amount, description) => {\r\n    try {\r\n      const response = await api.post('/transactions/withdraw', {\r\n        customerId,\r\n        amount,\r\n        description\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get customer transactions\r\n  getTransactions: async (customerId) => {\r\n    try {\r\n      console.log(`API: Getting transactions for customer ${customerId}`);\r\n      const response = await api.get(`/transactions/customer/${customerId}`);\r\n      console.log('API: Transactions response:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('API: Transactions error:', error);\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get customer passbook\r\n  getPassbook: async (customerId) => {\r\n    try {\r\n      const response = await api.get(`/transactions/customer/${customerId}/passbook`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get specific transaction\r\n  getTransaction: async (transactionId) => {\r\n    try {\r\n      const response = await api.get(`/transactions/${transactionId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}